k-NN Experiment Results:
Parameters (k=5, alpha=0.001, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.001, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.001, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.01, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.01, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.01, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.05, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.05, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=5, alpha=0.05, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.001, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.001, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.001, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.01, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.01, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.01, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.05, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.05, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=10, alpha=0.05, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.001, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.001, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.001, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.01, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.01, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.01, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.05, h=5):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.05, h=10):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Parameters (k=15, alpha=0.05, h=20):
Classification Metrics: {'precision': np.float64(0.0), 'recall': np.float64(0.0), 'f1_score': np.float64(0.0), 'accuracy': 0.6074766355140186}
Detection Delay: None
False Alarm Rate: 0.0

Method A (Decision Fusion) Results:
p=0.1: Detection Time = 0
p=0.2: Detection Time = 0
p=0.5: Detection Time = 0
p=0.7: Detection Time = 0
p=0.9: Detection Time = 0

Method B (Statistical Aggregation) Results:
Aggregation Method = average: Detection Time = 0
Aggregation Method = median: Detection Time = 0
Aggregation Method = outlier_detection: Detection Time = 0
